"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactChartist = _interopRequireDefault(require("react-chartist"));

var _withStyles = _interopRequireDefault(require("@material-ui/core/styles/withStyles"));

var _Icon = _interopRequireDefault(require("@material-ui/core/Icon"));

var _Store = _interopRequireDefault(require("@material-ui/icons/Store"));

var _Warning = _interopRequireDefault(require("@material-ui/icons/Warning"));

var _DateRange = _interopRequireDefault(require("@material-ui/icons/DateRange"));

var _LocalOffer = _interopRequireDefault(require("@material-ui/icons/LocalOffer"));

var _Update = _interopRequireDefault(require("@material-ui/icons/Update"));

var _ArrowUpward = _interopRequireDefault(require("@material-ui/icons/ArrowUpward"));

var _AccessTime = _interopRequireDefault(require("@material-ui/icons/AccessTime"));

var _Accessibility = _interopRequireDefault(require("@material-ui/icons/Accessibility"));

var _BugReport = _interopRequireDefault(require("@material-ui/icons/BugReport"));

var _Code = _interopRequireDefault(require("@material-ui/icons/Code"));

var _Cloud = _interopRequireDefault(require("@material-ui/icons/Cloud"));

var _GridItem = _interopRequireDefault(require("components/Grid/GridItem.jsx"));

var _GridContainer = _interopRequireDefault(require("components/Grid/GridContainer.jsx"));

var _Table = _interopRequireDefault(require("components/Table/Table.jsx"));

var _Tasks = _interopRequireDefault(require("components/Tasks/Tasks.jsx"));

var _CustomTabs = _interopRequireDefault(require("components/CustomTabs/CustomTabs.jsx"));

var _Danger = _interopRequireDefault(require("components/Typography/Danger.jsx"));

var _Card = _interopRequireDefault(require("components/Card/Card.jsx"));

var _CardHeader = _interopRequireDefault(require("components/Card/CardHeader.jsx"));

var _CardIcon = _interopRequireDefault(require("components/Card/CardIcon.jsx"));

var _CardBody = _interopRequireDefault(require("components/Card/CardBody.jsx"));

var _CardFooter = _interopRequireDefault(require("components/Card/CardFooter.jsx"));

var _general = require("variables/general.jsx");

var _charts = require("variables/charts.jsx");

var _dashboardStyle = _interopRequireDefault(require("assets/jss/material-dashboard-react/views/dashboardStyle.jsx"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Dashboard =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Dashboard, _React$Component);

  function Dashboard() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Dashboard);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      value: 0
    });

    _defineProperty(_assertThisInitialized(_this), "handleChange", function (event, value) {
      _this.setState({
        value: value
      });
    });

    _defineProperty(_assertThisInitialized(_this), "handleChangeIndex", function (index) {
      _this.setState({
        value: index
      });
    });

    return _this;
  }

  _createClass(Dashboard, [{
    key: "render",
    value: function render() {
      var classes = this.props.classes;
      return _react.default.createElement("div", null, _react.default.createElement(_GridContainer.default, null, _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 6,
        md: 3
      }, _react.default.createElement(_Card.default, null, _react.default.createElement(_CardHeader.default, {
        color: "warning",
        stats: true,
        icon: true
      }, _react.default.createElement(_CardIcon.default, {
        color: "warning"
      }, _react.default.createElement(_Icon.default, null, "content_copy")), _react.default.createElement("p", {
        className: classes.cardCategory
      }, "Used Space"), _react.default.createElement("h3", {
        className: classes.cardTitle
      }, "49/50 ", _react.default.createElement("small", null, "GB"))), _react.default.createElement(_CardFooter.default, {
        stats: true
      }, _react.default.createElement("div", {
        className: classes.stats
      }, _react.default.createElement(_Danger.default, null, _react.default.createElement(_Warning.default, null)), _react.default.createElement("a", {
        href: "#pablo",
        onClick: function onClick(e) {
          return e.preventDefault();
        }
      }, "Get more space"))))), _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 6,
        md: 3
      }, _react.default.createElement(_Card.default, null, _react.default.createElement(_CardHeader.default, {
        color: "success",
        stats: true,
        icon: true
      }, _react.default.createElement(_CardIcon.default, {
        color: "success"
      }, _react.default.createElement(_Store.default, null)), _react.default.createElement("p", {
        className: classes.cardCategory
      }, "Revenue"), _react.default.createElement("h3", {
        className: classes.cardTitle
      }, "$34,245")), _react.default.createElement(_CardFooter.default, {
        stats: true
      }, _react.default.createElement("div", {
        className: classes.stats
      }, _react.default.createElement(_DateRange.default, null), "Last 24 Hours")))), _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 6,
        md: 3
      }, _react.default.createElement(_Card.default, null, _react.default.createElement(_CardHeader.default, {
        color: "danger",
        stats: true,
        icon: true
      }, _react.default.createElement(_CardIcon.default, {
        color: "danger"
      }, _react.default.createElement(_Icon.default, null, "info_outline")), _react.default.createElement("p", {
        className: classes.cardCategory
      }, "Fixed Issues"), _react.default.createElement("h3", {
        className: classes.cardTitle
      }, "75")), _react.default.createElement(_CardFooter.default, {
        stats: true
      }, _react.default.createElement("div", {
        className: classes.stats
      }, _react.default.createElement(_LocalOffer.default, null), "Tracked from Github")))), _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 6,
        md: 3
      }, _react.default.createElement(_Card.default, null, _react.default.createElement(_CardHeader.default, {
        color: "info",
        stats: true,
        icon: true
      }, _react.default.createElement(_CardIcon.default, {
        color: "info"
      }, _react.default.createElement(_Accessibility.default, null)), _react.default.createElement("p", {
        className: classes.cardCategory
      }, "Followers"), _react.default.createElement("h3", {
        className: classes.cardTitle
      }, "+245")), _react.default.createElement(_CardFooter.default, {
        stats: true
      }, _react.default.createElement("div", {
        className: classes.stats
      }, _react.default.createElement(_Update.default, null), "Just Updated"))))), _react.default.createElement(_GridContainer.default, null, _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 4
      }, _react.default.createElement(_Card.default, {
        chart: true
      }, _react.default.createElement(_CardHeader.default, {
        color: "success"
      }, _react.default.createElement(_reactChartist.default, {
        className: "ct-chart",
        data: _charts.dailySalesChart.data,
        type: "Line",
        options: _charts.dailySalesChart.options,
        listener: _charts.dailySalesChart.animation
      })), _react.default.createElement(_CardBody.default, null, _react.default.createElement("h4", {
        className: classes.cardTitle
      }, "Daily Sales"), _react.default.createElement("p", {
        className: classes.cardCategory
      }, _react.default.createElement("span", {
        className: classes.successText
      }, _react.default.createElement(_ArrowUpward.default, {
        className: classes.upArrowCardCategory
      }), " 55%"), " ", "increase in today sales.")), _react.default.createElement(_CardFooter.default, {
        chart: true
      }, _react.default.createElement("div", {
        className: classes.stats
      }, _react.default.createElement(_AccessTime.default, null), " updated 4 minutes ago")))), _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 4
      }, _react.default.createElement(_Card.default, {
        chart: true
      }, _react.default.createElement(_CardHeader.default, {
        color: "warning"
      }, _react.default.createElement(_reactChartist.default, {
        className: "ct-chart",
        data: _charts.emailsSubscriptionChart.data,
        type: "Bar",
        options: _charts.emailsSubscriptionChart.options,
        responsiveOptions: _charts.emailsSubscriptionChart.responsiveOptions,
        listener: _charts.emailsSubscriptionChart.animation
      })), _react.default.createElement(_CardBody.default, null, _react.default.createElement("h4", {
        className: classes.cardTitle
      }, "Email Subscriptions"), _react.default.createElement("p", {
        className: classes.cardCategory
      }, "Last Campaign Performance")), _react.default.createElement(_CardFooter.default, {
        chart: true
      }, _react.default.createElement("div", {
        className: classes.stats
      }, _react.default.createElement(_AccessTime.default, null), " campaign sent 2 days ago")))), _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 4
      }, _react.default.createElement(_Card.default, {
        chart: true
      }, _react.default.createElement(_CardHeader.default, {
        color: "danger"
      }, _react.default.createElement(_reactChartist.default, {
        className: "ct-chart",
        data: _charts.completedTasksChart.data,
        type: "Line",
        options: _charts.completedTasksChart.options,
        listener: _charts.completedTasksChart.animation
      })), _react.default.createElement(_CardBody.default, null, _react.default.createElement("h4", {
        className: classes.cardTitle
      }, "Completed Tasks"), _react.default.createElement("p", {
        className: classes.cardCategory
      }, "Last Campaign Performance")), _react.default.createElement(_CardFooter.default, {
        chart: true
      }, _react.default.createElement("div", {
        className: classes.stats
      }, _react.default.createElement(_AccessTime.default, null), " campaign sent 2 days ago"))))), _react.default.createElement(_GridContainer.default, null, _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 6
      }, _react.default.createElement(_CustomTabs.default, {
        title: "Tasks:",
        headerColor: "primary",
        tabs: [{
          tabName: "Bugs",
          tabIcon: _BugReport.default,
          tabContent: _react.default.createElement(_Tasks.default, {
            checkedIndexes: [0, 3],
            tasksIndexes: [0, 1, 2, 3],
            tasks: _general.bugs
          })
        }, {
          tabName: "Website",
          tabIcon: _Code.default,
          tabContent: _react.default.createElement(_Tasks.default, {
            checkedIndexes: [0],
            tasksIndexes: [0, 1],
            tasks: _general.website
          })
        }, {
          tabName: "Server",
          tabIcon: _Cloud.default,
          tabContent: _react.default.createElement(_Tasks.default, {
            checkedIndexes: [1],
            tasksIndexes: [0, 1, 2],
            tasks: _general.server
          })
        }]
      })), _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 6
      }, _react.default.createElement(_Card.default, null, _react.default.createElement(_CardHeader.default, {
        color: "warning"
      }, _react.default.createElement("h4", {
        className: classes.cardTitleWhite
      }, "Employees Stats"), _react.default.createElement("p", {
        className: classes.cardCategoryWhite
      }, "New employees on 15th September, 2016")), _react.default.createElement(_CardBody.default, null, _react.default.createElement(_Table.default, {
        tableHeaderColor: "warning",
        tableHead: ["ID", "Name", "Salary", "Country"],
        tableData: [["1", "Dakota Rice", "$36,738", "Niger"], ["2", "Minerva Hooper", "$23,789", "Curaçao"], ["3", "Sage Rodriguez", "$56,142", "Netherlands"], ["4", "Philip Chaney", "$38,735", "Korea, South"]]
      }))))));
    }
  }]);

  return Dashboard;
}(_react.default.Component);

Dashboard.propTypes = {
  classes: _propTypes.default.object.isRequired
};

var _default = (0, _withStyles.default)(_dashboardStyle.default)(Dashboard);

exports.default = _default;