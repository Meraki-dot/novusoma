"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _withStyles = _interopRequireDefault(require("@material-ui/core/styles/withStyles"));

var _AddAlert = _interopRequireDefault(require("@material-ui/icons/AddAlert"));

var _GridItem = _interopRequireDefault(require("components/Grid/GridItem.jsx"));

var _GridContainer = _interopRequireDefault(require("components/Grid/GridContainer.jsx"));

var _Button = _interopRequireDefault(require("components/CustomButtons/Button.jsx"));

var _SnackbarContent = _interopRequireDefault(require("components/Snackbar/SnackbarContent.jsx"));

var _Snackbar = _interopRequireDefault(require("components/Snackbar/Snackbar.jsx"));

var _Card = _interopRequireDefault(require("components/Card/Card.jsx"));

var _CardHeader = _interopRequireDefault(require("components/Card/CardHeader.jsx"));

var _CardBody = _interopRequireDefault(require("components/Card/CardBody.jsx"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var styles = {
  cardCategoryWhite: {
    "&,& a,& a:hover,& a:focus": {
      color: "rgba(255,255,255,.62)",
      margin: "0",
      fontSize: "14px",
      marginTop: "0",
      marginBottom: "0"
    },
    "& a,& a:hover,& a:focus": {
      color: "#FFFFFF"
    }
  },
  cardTitleWhite: {
    color: "#FFFFFF",
    marginTop: "0px",
    minHeight: "auto",
    fontWeight: "300",
    fontFamily: "'Roboto', 'Helvetica', 'Arial', sans-serif",
    marginBottom: "3px",
    textDecoration: "none",
    "& small": {
      color: "#777",
      fontSize: "65%",
      fontWeight: "400",
      lineHeight: "1"
    }
  }
};

var Notifications =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Notifications, _React$Component);

  function Notifications(props) {
    var _this;

    _classCallCheck(this, Notifications);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Notifications).call(this, props));
    _this.state = {
      tl: false,
      tc: false,
      tr: false,
      bl: false,
      bc: false,
      br: false
    };
    return _this;
  } // to stop the warning of calling setState of unmounted component


  _createClass(Notifications, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var id = window.setTimeout(null, 0);

      while (id--) {
        window.clearTimeout(id);
      }
    }
  }, {
    key: "showNotification",
    value: function showNotification(place) {
      var x = [];
      x[place] = true;
      this.setState(x);
      this.alertTimeout = setTimeout(function () {
        x[place] = false;
        this.setState(x);
      }.bind(this), 6000);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var classes = this.props.classes;
      return _react.default.createElement(_Card.default, null, _react.default.createElement(_CardHeader.default, {
        color: "primary"
      }, _react.default.createElement("h4", {
        className: classes.cardTitleWhite
      }, "Notifications"), _react.default.createElement("p", {
        className: classes.cardCategoryWhite
      }, "Handcrafted by our friends from", " ", _react.default.createElement("a", {
        target: "_blank",
        href: "https://material-ui-next.com/?ref=creativetime"
      }, "Material UI"), " ", "and styled by", " ", _react.default.createElement("a", {
        target: "_blank",
        href: "https://www.creative-tim.com/?ref=mdr-notifications-page"
      }, "Creative Tim"), ". Please checkout the", " ", _react.default.createElement("a", {
        href: "#pablo",
        target: "_blank"
      }, "full documentation"), ".")), _react.default.createElement(_CardBody.default, null, _react.default.createElement(_GridContainer.default, null, _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 6
      }, _react.default.createElement("h5", null, "Notifications Style"), _react.default.createElement("br", null), _react.default.createElement(_SnackbarContent.default, {
        message: "This is a plain notification"
      }), _react.default.createElement(_SnackbarContent.default, {
        message: "This is a notification with close button.",
        close: true
      }), _react.default.createElement(_SnackbarContent.default, {
        message: "This is a notification with close button and icon.",
        close: true,
        icon: _AddAlert.default
      }), _react.default.createElement(_SnackbarContent.default, {
        message: "This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.",
        close: true,
        icon: _AddAlert.default
      })), _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 6
      }, _react.default.createElement("h5", null, "Notifications States"), _react.default.createElement("br", null), _react.default.createElement(_SnackbarContent.default, {
        message: 'INFO - This is a regular notification made with color="info"',
        close: true,
        color: "info"
      }), _react.default.createElement(_SnackbarContent.default, {
        message: 'SUCCESS - This is a regular notification made with color="success"',
        close: true,
        color: "success"
      }), _react.default.createElement(_SnackbarContent.default, {
        message: 'WARNING - This is a regular notification made with color="warning"',
        close: true,
        color: "warning"
      }), _react.default.createElement(_SnackbarContent.default, {
        message: 'DANGER - This is a regular notification made with color="danger"',
        close: true,
        color: "danger"
      }), _react.default.createElement(_SnackbarContent.default, {
        message: 'PRIMARY - This is a regular notification made with color="primary"',
        close: true,
        color: "primary"
      }))), _react.default.createElement("br", null), _react.default.createElement("br", null), _react.default.createElement(_GridContainer.default, {
        justify: "center"
      }, _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 6,
        style: {
          textAlign: "center"
        }
      }, _react.default.createElement("h5", null, "Notifications Places", _react.default.createElement("br", null), _react.default.createElement("small", null, "Click to view notifications")))), _react.default.createElement(_GridContainer.default, {
        justify: "center"
      }, _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 10,
        lg: 8
      }, _react.default.createElement(_GridContainer.default, null, _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 4
      }, _react.default.createElement(_Button.default, {
        fullWidth: true,
        color: "primary",
        onClick: function onClick() {
          return _this2.showNotification("tl");
        }
      }, "Top Left"), _react.default.createElement(_Snackbar.default, {
        place: "tl",
        color: "info",
        icon: _AddAlert.default,
        message: "Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.",
        open: this.state.tl,
        closeNotification: function closeNotification() {
          return _this2.setState({
            tl: false
          });
        },
        close: true
      })), _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 4
      }, _react.default.createElement(_Button.default, {
        fullWidth: true,
        color: "primary",
        onClick: function onClick() {
          return _this2.showNotification("tc");
        }
      }, "Top Center"), _react.default.createElement(_Snackbar.default, {
        place: "tc",
        color: "info",
        icon: _AddAlert.default,
        message: "Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.",
        open: this.state.tc,
        closeNotification: function closeNotification() {
          return _this2.setState({
            tc: false
          });
        },
        close: true
      })), _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 4
      }, _react.default.createElement(_Button.default, {
        fullWidth: true,
        color: "primary",
        onClick: function onClick() {
          return _this2.showNotification("tr");
        }
      }, "Top Right"), _react.default.createElement(_Snackbar.default, {
        place: "tr",
        color: "info",
        icon: _AddAlert.default,
        message: "Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.",
        open: this.state.tr,
        closeNotification: function closeNotification() {
          return _this2.setState({
            tr: false
          });
        },
        close: true
      }))))), _react.default.createElement(_GridContainer.default, {
        justify: "center"
      }, _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 10,
        lg: 8
      }, _react.default.createElement(_GridContainer.default, null, _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 4
      }, _react.default.createElement(_Button.default, {
        fullWidth: true,
        color: "primary",
        onClick: function onClick() {
          return _this2.showNotification("bl");
        }
      }, "Bottom Left"), _react.default.createElement(_Snackbar.default, {
        place: "bl",
        color: "info",
        icon: _AddAlert.default,
        message: "Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.",
        open: this.state.bl,
        closeNotification: function closeNotification() {
          return _this2.setState({
            bl: false
          });
        },
        close: true
      })), _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 4
      }, _react.default.createElement(_Button.default, {
        fullWidth: true,
        color: "primary",
        onClick: function onClick() {
          return _this2.showNotification("bc");
        }
      }, "Bottom Center"), _react.default.createElement(_Snackbar.default, {
        place: "bc",
        color: "info",
        icon: _AddAlert.default,
        message: "Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.",
        open: this.state.bc,
        closeNotification: function closeNotification() {
          return _this2.setState({
            bc: false
          });
        },
        close: true
      })), _react.default.createElement(_GridItem.default, {
        xs: 12,
        sm: 12,
        md: 4
      }, _react.default.createElement(_Button.default, {
        fullWidth: true,
        color: "primary",
        onClick: function onClick() {
          return _this2.showNotification("br");
        }
      }, "Bottom Right"), _react.default.createElement(_Snackbar.default, {
        place: "br",
        color: "info",
        icon: _AddAlert.default,
        message: "Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.",
        open: this.state.br,
        closeNotification: function closeNotification() {
          return _this2.setState({
            br: false
          });
        },
        close: true
      })))))));
    }
  }]);

  return Notifications;
}(_react.default.Component);

Notifications.propTypes = {
  classes: _propTypes.default.object
};

var _default = (0, _withStyles.default)(styles)(Notifications);

exports.default = _default;