"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _withStyles = _interopRequireDefault(require("@material-ui/core/styles/withStyles"));

var _AppBar = _interopRequireDefault(require("@material-ui/core/AppBar"));

var _Toolbar = _interopRequireDefault(require("@material-ui/core/Toolbar"));

var _IconButton = _interopRequireDefault(require("@material-ui/core/IconButton"));

var _Hidden = _interopRequireDefault(require("@material-ui/core/Hidden"));

var _Menu = _interopRequireDefault(require("@material-ui/icons/Menu"));

var _AdminNavbarLinks = _interopRequireDefault(require("./AdminNavbarLinks.jsx"));

var _RTLNavbarLinks = _interopRequireDefault(require("./RTLNavbarLinks.jsx"));

var _Button = _interopRequireDefault(require("components/CustomButtons/Button.jsx"));

var _headerStyle = _interopRequireDefault(require("assets/jss/material-dashboard-react/components/headerStyle.jsx"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function Header(_ref) {
  var props = _extends({}, _ref);

  function makeBrand() {
    var name;
    props.routes.map(function (prop) {
      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {
        name = props.rtlActive ? prop.rtlName : prop.name;
      }

      return null;
    });
    return name;
  }

  var classes = props.classes,
      color = props.color;
  var appBarClasses = (0, _classnames.default)(_defineProperty({}, " " + classes[color], color));
  return _react.default.createElement(_AppBar.default, {
    className: classes.appBar + appBarClasses
  }, _react.default.createElement(_Toolbar.default, {
    className: classes.container
  }, _react.default.createElement("div", {
    className: classes.flex
  }, _react.default.createElement(_Button.default, {
    color: "transparent",
    href: "#",
    className: classes.title
  }, makeBrand())), _react.default.createElement(_Hidden.default, {
    smDown: true,
    implementation: "css"
  }, props.rtlActive ? _react.default.createElement(_RTLNavbarLinks.default, null) : _react.default.createElement(_AdminNavbarLinks.default, null)), _react.default.createElement(_Hidden.default, {
    mdUp: true,
    implementation: "css"
  }, _react.default.createElement(_IconButton.default, {
    color: "inherit",
    "aria-label": "open drawer",
    onClick: props.handleDrawerToggle
  }, _react.default.createElement(_Menu.default, null)))));
}

Header.propTypes = {
  classes: _propTypes.default.object.isRequired,
  color: _propTypes.default.oneOf(["primary", "info", "success", "warning", "danger"]),
  rtlActive: _propTypes.default.bool,
  handleDrawerToggle: _propTypes.default.func,
  routes: _propTypes.default.arrayOf(_propTypes.default.object)
};

var _default = (0, _withStyles.default)(_headerStyle.default)(Header);

exports.default = _default;