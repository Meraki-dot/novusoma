"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _sidebar = _interopRequireDefault(require("assets/img/sidebar-1.jpg"));

var _sidebar2 = _interopRequireDefault(require("assets/img/sidebar-2.jpg"));

var _sidebar3 = _interopRequireDefault(require("assets/img/sidebar-3.jpg"));

var _sidebar4 = _interopRequireDefault(require("assets/img/sidebar-4.jpg"));

var _Button = _interopRequireDefault(require("components/CustomButtons/Button.jsx"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var FixedPlugin =
/*#__PURE__*/
function (_Component) {
  _inherits(FixedPlugin, _Component);

  function FixedPlugin(props) {
    var _this;

    _classCallCheck(this, FixedPlugin);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(FixedPlugin).call(this, props));
    _this.state = {
      classes: "dropdown show",
      bg_checked: true,
      bgImage: _this.props.bgImage
    };
    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(FixedPlugin, [{
    key: "handleClick",
    value: function handleClick() {
      this.props.handleFixedClick();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react.default.createElement("div", {
        className: (0, _classnames.default)("fixed-plugin", {
          "rtl-fixed-plugin": this.props.rtlActive
        })
      }, _react.default.createElement("div", {
        id: "fixedPluginClasses",
        className: this.props.fixedClasses
      }, _react.default.createElement("div", {
        onClick: this.handleClick
      }, _react.default.createElement("i", {
        className: "fa fa-cog fa-2x"
      })), _react.default.createElement("ul", {
        className: "dropdown-menu"
      }, _react.default.createElement("li", {
        className: "header-title"
      }, "SIDEBAR FILTERS"), _react.default.createElement("li", {
        className: "adjustments-line"
      }, _react.default.createElement("a", {
        className: "switch-trigger"
      }, _react.default.createElement("div", null, _react.default.createElement("span", {
        className: this.props.bgColor === "purple" ? "badge filter badge-purple active" : "badge filter badge-purple",
        "data-color": "purple",
        onClick: function onClick() {
          _this2.props.handleColorClick("purple");
        }
      }), _react.default.createElement("span", {
        className: this.props.bgColor === "blue" ? "badge filter badge-blue active" : "badge filter badge-blue",
        "data-color": "blue",
        onClick: function onClick() {
          _this2.props.handleColorClick("blue");
        }
      }), _react.default.createElement("span", {
        className: this.props.bgColor === "green" ? "badge filter badge-green active" : "badge filter badge-green",
        "data-color": "green",
        onClick: function onClick() {
          _this2.props.handleColorClick("green");
        }
      }), _react.default.createElement("span", {
        className: this.props.bgColor === "red" ? "badge filter badge-red active" : "badge filter badge-red",
        "data-color": "red",
        onClick: function onClick() {
          _this2.props.handleColorClick("red");
        }
      }), _react.default.createElement("span", {
        className: this.props.bgColor === "orange" ? "badge filter badge-orange active" : "badge filter badge-orange",
        "data-color": "orange",
        onClick: function onClick() {
          _this2.props.handleColorClick("orange");
        }
      })))), _react.default.createElement("li", {
        className: "header-title"
      }, "Images"), _react.default.createElement("li", {
        className: this.state["bgImage"] === _sidebar.default ? "active" : ""
      }, _react.default.createElement("a", {
        className: "img-holder switch-trigger",
        onClick: function onClick() {
          _this2.setState({
            bgImage: _sidebar.default
          });

          _this2.props.handleImageClick(_sidebar.default);
        }
      }, _react.default.createElement("img", {
        src: _sidebar.default,
        alt: "..."
      }))), _react.default.createElement("li", {
        className: this.state["bgImage"] === _sidebar2.default ? "active" : ""
      }, _react.default.createElement("a", {
        className: "img-holder switch-trigger",
        onClick: function onClick() {
          _this2.setState({
            bgImage: _sidebar2.default
          });

          _this2.props.handleImageClick(_sidebar2.default);
        }
      }, _react.default.createElement("img", {
        src: _sidebar2.default,
        alt: "..."
      }))), _react.default.createElement("li", {
        className: this.state["bgImage"] === _sidebar3.default ? "active" : ""
      }, _react.default.createElement("a", {
        className: "img-holder switch-trigger",
        onClick: function onClick() {
          _this2.setState({
            bgImage: _sidebar3.default
          });

          _this2.props.handleImageClick(_sidebar3.default);
        }
      }, _react.default.createElement("img", {
        src: _sidebar3.default,
        alt: "..."
      }))), _react.default.createElement("li", {
        className: this.state["bgImage"] === _sidebar4.default ? "active" : ""
      }, _react.default.createElement("a", {
        className: "img-holder switch-trigger",
        onClick: function onClick() {
          _this2.setState({
            bgImage: _sidebar4.default
          });

          _this2.props.handleImageClick(_sidebar4.default);
        }
      }, _react.default.createElement("img", {
        src: _sidebar4.default,
        alt: "..."
      }))), _react.default.createElement("li", {
        className: "button-container"
      }, _react.default.createElement("div", {
        className: "button-container"
      }, _react.default.createElement(_Button.default, {
        color: "success",
        href: "https://www.creative-tim.com/product/material-dashboard-react?ref=mdr-fixed-plugin",
        target: "_blank",
        fullWidth: true
      }, "Download free!"))), _react.default.createElement("li", {
        className: "button-container"
      }, _react.default.createElement("div", {
        className: "button-container"
      }, _react.default.createElement(_Button.default, {
        color: "warning",
        href: "https://www.creative-tim.com/product/material-dashboard-pro-react?ref=mdr-fixed-plugin",
        target: "_blank",
        fullWidth: true
      }, "Get PRO version"))), _react.default.createElement("li", {
        className: "button-container"
      }, _react.default.createElement(_Button.default, {
        color: "info",
        fullWidth: true,
        href: "https://demos.creative-tim.com/material-dashboard-react/#/documentation/tutorial?ref=mdr-fixed-plugin",
        target: "_blank"
      }, "Documentation")), _react.default.createElement("li", {
        className: "adjustments-line"
      }))));
    }
  }]);

  return FixedPlugin;
}(_react.Component);

FixedPlugin.propTypes = {
  bgImage: _propTypes.default.string,
  handleFixedClick: _propTypes.default.func,
  rtlActive: _propTypes.default.bool,
  fixedClasses: _propTypes.default.string,
  bgColor: _propTypes.default.oneOf(["purple", "blue", "green", "orange", "red"]),
  handleColorClick: _propTypes.default.func,
  handleImageClick: _propTypes.default.func
};
var _default = FixedPlugin;
exports.default = _default;